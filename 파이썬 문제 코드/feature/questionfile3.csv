level, questions, choices, answers, explanations
1,파이썬에서 특정 조건에 따라 코드 블록을 실행할 때 사용하는 키워드는 무엇인가요?,A) loop \nB) when \nC) if \nD) while,C,if는 파이썬에서 조건을 검사하여 코드 실행 여부를 결정하는 조건문의 시작 키워드입니다.
1,다음 중 0부터 4까지의 숫자를 순서대로 출력하는 for 반복문 코드는 무엇인가요?,"A) for i in range(5): print(i) \nB) for i in range(1, 5): print(i) \nC) for i from 0 to 4: print(i) \nD) for i in list(5): print(i)",A,"range(n) 함수는 0부터 n-1까지의 정수를 생성하므로, range(5)는 0, 1, 2, 3, 4를 생성합니다."
1,"다음 while 반복문은 몇 번 ""반복""을 출력하나요?\ncount = 0\nwhile count < 2:\n\tprint(""반복"")\n\tcount += 1",A) 0번 \nB) 1번 \nC) 2번 \nD) 3번,C,"count가 0일 때, 1일 때 count < 2 조건이 참이 되어 총 두 번 ""반복""을 출력합니다. count가 2가 되면 조건이 거짓이 되어 반복문이 종료됩니다."
1,다음 중 조건문 뒤에 반드시 와야 하는 기호는 무엇인가요?,"A) . (마침표) \nB) ; (세미콜론) \nC) : (콜론) \nD) , (쉼표)",C,"파이썬에서는 if나 elif, else, for, while 문 뒤에 콜론(:)을 붙여 코드 블록의 시작을 알립니다."
1,"다음 코드의 출력 결과는 무엇인가요?\na = 5; b = 3 \nif a > b: \n\tprint(""a가 더 크다"") \nelse: \n\tprint(""b가 더 크거나 같다"")",A) a가 더 크다 \nB) b가 더 크거나 같다 \nC) 오류 \nD) 아무것도 출력되지 않음,A,"a는 b보다 크므로 if 조건이 참이 되어 ""a가 더 크다""가 출력됩니다."
1,while 반복문은 주로 어떤 경우에 사용되나요?,A) 리스트의 모든 요소를 순회할 때 \nB) 함수를 여러 번 실행할 때 \nC) 특정 조건이 만족될 때까지 코드를 계속 실행할 때 \nD) 숫자를 한 번만 출력할 때,C,while 반복문은 주어진 조건이 참인 동안 코드 블록을 계속 반복 실행합니다.
1,"다음 코드의 결과는 무엇인가요?\nis_sunny = True\nif is_sunny:\n\tprint(""산책 가자!"")",A) 산책 가자! \nB) 아무것도 출력되지 않음 \nC) 오류 발생 \nD) True,A,"is_sunny 변수가 True이므로 if 조건이 참이 되어 ""산책 가자!""가 출력됩니다."
1,"다음 코드에서 print(""반갑습니다"")는 몇 번 실행되나요?\nfor _ in range(4):\n\tprint(""반갑습니다"")",A) 1번 \nB) 2번 \nC) 3번 \nD) 4번,D,"range(4)는 0, 1, 2, 3을 생성하므로 for 반복문은 총 4번 실행됩니다. 따라서 ""반갑습니다""도 4번 출력됩니다."
2,"다음 코드의 출력 결과는 무엇인가요?\ntemperature = 28\nif temperature > 30:\n\tprint(""매우 더움"")\nelif temperature >= 25:\n\tprint(""더움"")\nelse:\n\tprint(""적정 온도"")",A) 매우 더움 \nB) 더움 \nC) 적정 온도 \nD) 오류 발생,B,"temperature는 30보다 크지 않으므로 첫 번째 if 조건은 거짓입니다. 하지만 25보다 크거나 같으므로 elif 조건이 참이 되어 ""더움""이 출력됩니다."
2,다음 for 반복문에서 continue 키워드가 실행되었을 때 어떤 일이 발생하나요?\nfor i in range(3):\n\tif i == 1:\n\t\tcontinue\n\tprint(i),"A) 반복문이 즉시 종료된다. \nB) i가 1일 때만 코드를 실행하고 종료된다. \nC) i가 1일 때, 현재 반복을 건너뛰고 다음 반복으로 넘어간다. \nD) 오류가 발생한다.",C,"continue는 현재 반복의 남은 부분을 건너뛰고 다음 반복을 즉시 시작하게 합니다. 따라서 i가 1일 때는 print(i)가 실행되지 않고, i가 0과 2일 때만 출력됩니다."
2,"다음 while 반복문은 언제 종료되나요?\nnum = 1\nwhile num < 5:\n\tprint(num)\n\tnum += 1\nprint(""종료"")","A) num이 1일 때 \nB) num이 4일 때 \nC) num이 5가 되었을 때 (num < 5 조건이 거짓이 됨) \nD) ""종료""가 출력된 후에",C,"while 반복문은 조건 num < 5가 거짓이 될 때 종료됩니다. num이 4일 때까지 print(num)이 실행되고 num이 5가 되면 조건이 거짓이 되어 반복문이 종료됩니다. ""종료""는 반복문이 종료된 후에 출력됩니다."
2,"사용자로부터 숫자를 입력받아 10보다 크면 ""큼"", 10이면 ""같음"", 10보다 작으면 ""작음""을 출력하는 코드의 조건으로 적절하지 않은 것은?",A) num > 10: \nB) num == 10: \nC) num < 10: \nD) True:,D,if True: 조건은 무조건 참이 됩니다
2,"다음 for 반복문에서 print(""끝"")이 출력되는 횟수는 몇 번인가요?\nfor i in range(3): \n\tfor j in range(1):\n\t\tprint(""안"") \nprint(""끝"") ",A) 1번 \nB) 2번 \nC) 3번 \nD) 4번,A,"바깥 for 문은 3번 반복하고, 안쪽 for 문은 1번 반복하여 ""안""은 총 3번 출력됩니다. 하지만 print(""끝"")은 바깥 for 문이 모두 끝난 후에 실행되므로 1번만 출력됩니다."
2,"리스트 data = [10, 20, 30]의 각 요소에 10을 더한 새로운 리스트를 만들고 싶습니다. for 반복문을 사용한 올바른 코드는?",A)new_data = []\nfor x in data: \n\tnew_data.append(data + 10) \n\nB)new_data = []\nfor x in data: \n\tnew_data.append(x + 10) \n\nC)new_data = data + 10 \n\nD)for x in data: \n\tx + 10\n\tnew_data = data,B,for x in data:를 통해 data의 각 요소(x)에 접근하여 10을 더한 후 new_data 리스트에 추가해야 합니다.
2,"다음 코드의 출력 결과는 무엇인가요?\nnum = 15\nif num % 3 == 0 and num % 5 == 0:\n\tprint(""FizzBuzz"")\nelif num % 3 == 0:\n\tprint(""Fizz"")\nelif num % 5 == 0:\n\tprint(""Buzz"")\nelse:\n\tprint(num)",A) Fizz \nB) Buzz \nC) FizzBuzz \nD) 15,C,"num은 3의 배수이면서 5의 배수이므로 첫 번째 if 조건이 참이 되어 ""FizzBuzz""가 출력됩니다."
2,"리스트 scores = [70, 85, 90, 65]에서 80점 이상인 점수만 출력하는 for 반복문과 if 조건문의 조합으로 올바른 것은?",A) for s in scores: \n\tif s > 80: \n\t\tprint(s) \n\nB) for s in scores: \n\tif s >= 80: \n\t\tprint(s) \n\nC) if s >= 80: \n\tfor s in scores: \n\t\tprint(s) \n\nD) for s in scores :\n\tif s >= 80: \n\t\tprint(s),B,"80점 '이상'이므로 s >= 80 조건이 필요하며, 반복문 안에서 각 s에 대해 조건을 검사해야 합니다."
3,"다음 리스트 내포(List Comprehension) 코드의 결과는 무엇인가요?\nnumbers = [1, 2, 3, 4, 5]\neven_squares = [x**2 for x in numbers if x % 2 == 0]\nprint(even_squares)","A) [1, 9, 25] \nB) [2, 4] \nC) [4, 16] \nD) [1, 4, 9, 16, 25]",C,"numbers 리스트에서 짝수(x % 2 == 0)인 요소(2, 4)만 선택하여 각각 제곱(x**2)하므로 [4, 16]이 됩니다."
3,"다음 enumerate 함수를 활용한 코드의 출력 결과는 무엇인가요?\nnames = [""짱구"", ""맹구"", ""흰둥이""]\nfor idx, name in enumerate(names, start=1):\n\tprint(f""{idx}번: {name}"")","A) 0번: 짱구, 1번: 맹구, 2번: 흰둥이 \nB) 1번: 짱구, 2번: 맹구, 3번: 흰둥이 \nC) 짱구, 맹구, 흰둥이 \nD) 오류 발생",B,"enumerate()는 컬렉션의 인덱스와 요소를 함께 반환하며, start=1 옵션을 사용하면 인덱스를 1부터 시작합니다."
3,"다음 코드는 몇 개의 ""성공!""을 출력하나요?\ndata = [(1, 2), (3, 4), (5, 6)]\ntarget_sum = 7\nfor a, b in data:\n\tif a + b == target_sum:\n\t\tprint(""성공!"")\n\t\tbreak",A) 0개 \nB) 1개 \nC) 2개 \nD) 3개,B,"(1, 2)는 합이 3이므로 if 조건이 거짓입니다. (3, 4)는 합이 7이므로 if 조건이 참이 되어 ""성공!""을 출력하고 break 문에 의해 반복문이 즉시 종료됩니다. 따라서 한 번만 출력됩니다."
3,"다음 코드의 출력 결과는 무엇인가요?\nlist1 = ['A', 'B', 'C'] \nlist2 = [1, 2] \nresult = [] \nfor item1, item2 in zip(list1, list2):\n\tresult.append(f""{item1}-{item2}"") \nprint(result)","A) ['A-1', 'B-2', 'C-?'] \nB) ['A-1', 'B-2'] \nC) ['A-1', 'B-2', 'C'] \nD) 오류 발생",B,"zip() 함수는 전달된 이터러블 중 가장 짧은 것의 길이에 맞춰 요소를 묶습니다. list2의 길이가 2이므로, 두 개의 짝만 생성됩니다."
3,"다음 리스트 내포(List Comprehension) 코드의 결과는 무엇인가요?\nwords = [""apple"", ""banana"", ""cherry"", ""date""] \nlong_words = [word.upper() for word in words if len(word) > 5] \nprint(long_words)","A) ['APPLE', 'CHERRY'] \nB) ['BANANA', 'CHERRY'] \nC) ['APPLE', 'BANANA', 'CHERRY', 'DATE'] \nD) ['BANANA', 'CHERRY', 'DATE']",B," words 리스트에서 길이가 5보다 큰 단어(if len(word) > 5)만 선택하고, 선택된 단어를 대문자로 변환(word.upper())합니다. ""banana"" (6글자), ""cherry"" (6글자)가 조건에 해당합니다."
3,사용자로부터 0이 아닌 숫자를 입력받을 때까지 계속해서 입력을 요청하는 코드로 가장 적절한 것은?,"A)num = 0 \nif num == 0: \n\tnum = int(input(""숫자 입력: "")) \n\nB)num = 0 \nwhile num == 0: \n\tnum = int(input(""숫자 입력: "")) \n\nC)num = int(input(""숫자 입력: "")) \nif num != 0: \n\tprint(""0이 아닌 숫자입니다."") \n\nD)num = int(input(""숫자 입력: "")) \nfor _ in range(100): \n\tif num == 0: \n\t\tnum = int(input(""숫자 입력: "")) \n\telse: \n\t\tbreak",B,while num == 0:은 num이 0인 동안 계속 반복하여 입력을 받습니다. 0이 아닌 숫자가 입력되면 num == 0 조건이 거짓이 되어 반복문이 종료됩니다.
3,"다음 코드의 출력 결과는 무엇인가요?\ndata = [1, 2, 3, 4]\noutput = []\nfor i in range(len(data)):\n\tif i % 2 == 0:\n\t\toutput.append(data[i] * 2)\nprint(output)","A) [2, 4, 6, 8] \nB) [1, 3] \nC) [2, 6] \nD) [4, 8]",C,"range(len(data))는 0, 1, 2, 3을 생성합니다. i가 짝수(0, 2)일 때만 data[i]에 2를 곱하여 output 리스트에 추가합니다."
3,다음 while 반복문은 몇 개의 숫자를 출력하나요?\ni = 10\nwhile i > 0:\n\tif i % 3 == 0:\n\t\tprint(i)\n\ti -= 1,A) 2개 \nB) 3개 \nC) 4개 \nD) 5개,B,i는 10부터 1까지 감소합니다. i가 3의 배수인 경우만 출력합니다.
3,"다음 코드의 출력 결과는 무엇인가요?\nitems = [""apple"", ""banana"", ""kiwi""] \nprices = [1000, 1500, 800] \nfor item, price in zip(items, prices): \n\tif item == ""banana"": \n\t\tprint(f""{item}의 가격은 {price}원입니다."") \n\t\tbreak",A) apple의 가격은 1000원입니다. \nB) banana의 가격은 1500원입니다. \nC) kiwi의 가격은 800원입니다. \nD) 아무것도 출력되지 않음,B,"zip()으로 (""apple"", 1000), (""banana"", 1500), (""kiwi"", 800) 순서로 묶입니다. 첫 번째 반복에서 item이 ""banana""가 아니므로 건너뛰고, 두 번째 반복에서 item이 ""banana""이므로 ""banana의 가격은 1500원입니다.""를 출력한 후 break에 의해 반복문이 종료됩니다."