.#회원가입,로그인, 로그아웃
1.current_user = None으로 설정 프로그램을 시작시 초기화가 된 상태로 시작 해 로그인이 되는 순간 이 변수가 로그인한 사용자의 정보로 변경
2.json을 이용해 json 파일에 저장  실행 시 json 파일이 없다면 새로운 제이슨 파일을 만듬 그렇게 저장된 데이터를 읽어 해당 내용이 없다면 딕셔너리안에 저장    
3.그렇게 저장이 된 정보를 읽어 순서대로 사용자 명이 맞는지 이후 비밀번호가 맞는지의 과정을 거쳐 로그인이 완료됨  
4.로그아웃 또한 current_user = None으로 재설정 됨



#포스트 기능
1.포스트에 들어가는 내용 [ 시간,제목,작성자,내용,카테고리]
시간 Datetime모듈을 이용해 현재 시간이 나오도록 설계
제목:작성자가 직접 입력을 할 수 있도록 설계
작성자:로그인을 하지 않는다면 작성 자체가 되지 않기 때문에 main.py에서 설정된 json 의 아이디 정보를 작성자로 출력하도록
(로그인이 되지 않으면 글을 쓸 수 조차 없음)
내용:작성자가 직접 입력을 할 수 있도록 설계
카테고리:카테고리는 자유롭게 설정을 하면 글을 찾을 때 힘들 것 같기에 6가지의 선택지를 설정
2.displat_post 부분에서 사용자가 입력을 한 부분이 정리 
3.아래의 save_to_file(self)부분에서 파일이 생성 저장 공간은 member2 폴더의 test_posts 폴더로 경로를 지정과 함께 
파일을 생성할때
생성은 저장소의 파일을 확인한 뒤 앞부분이 숫자만으로 이루어진 txt파일을 확인 후 가장큰 숫자에+1을 하는 형태로 간단하게 숫자로만 파일명이 생성되도록 설계 이때 파일을 읽을때 .뒤에 있는 부분을 확인하지 않고 앞에 숫자만을 확인
4.이 과정을 통해 파일이 생성이 되고 파일과 접촉 그후 with open으로 파일을 .txt파일의 형식으로 저장이 된다.

#댓글 기능
1.댓글에 들어가는 내용 [시간,작성자,내용] 시간은 포스트와 같이 datetime을 이용
내용은 작성자에게 받을 수 있도록 사용
2.댓글을 달 게시글을 찾는 포스트에서 파일 저장을 응용해 숫자만을 확인 하도록 확인
위 확인에서 파일을 찾을 수 없다면 “댓글을 달 수 없다는 내용이 출력”  
3.post_info라는 딕셔너리를 만들어 만약에 파일이 있다면 포스트에서 파일을 저장한 방식을 또 이용해서 pos_info 딕셔너리에 저장을 해서 보여줌 이때 출력되는 항목은 텍스트 파일의 숫자,제목  
4.그렇게 완성된 리스트에서 댓글을 작성할 게시글을 텍스트의 숫자를 입력하면 접근 가능하게 만들어 숫자를 넣지 않으면 반복   
5.그렇게 옳게 된 게시글을 선택 후 댓글작성의로 이동 댓글을 작성한 내용을 받으면 datetime 모듈을 이용해서 시간을 출력하고 join으로 파일에 접촉  with open 으로 파일을 열어 아래와 같이 해당 정보들이 txt 파일에 추가된다.




#게시글 확인
1.포스팅한 글을 가져오는 함수
posts라는 빈 저장소를 만들어 저장소를 생성  
폴더안에 파일이 있다면 파일을 확인 함 확인한 폴더를 ‘r’로 읽어 제목,작성자,게시글id 정보를 추출 이후 
posts 딕셔너리에 해당 내용을 저장해 불러옴 순서를 확인 해 1부터 시작 +1을 반복 해 출력 될 때는 1,2  위 와 같은 방식으로 
이번에는 제목과 카테고리를 추출 이후 posts 저장소안에 저장해 목록을 보여줌 찾는 카테고리가 없다면’ 찾으시는 카테고리에 해당하는 글이 없습니다.’이 출력됨
아래 시간순은 이번에는 제목과 시간맞을 추출해 또 저장소에. 저장이 됨 이때 저장이 되는 순서는 시간을 확인 해 최신순으로 저장되어 출력이 됨
아래 좋아요 기능이 있는데 이건 제가 구현을 못해서 쓰지 못하게 됨  
키워드 부분에서 저장된 저장소 안에 내용을 확인 해 작성자와 내용등 폴더 파일 안에 내용이 있다면 저장후 출력  
